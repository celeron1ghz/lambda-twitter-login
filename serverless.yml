service: twitter-login

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ap-northeast-1
  deploymentBucket: serverless-upload-ap-northeast-1
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        - Fn::Join: [ ":", ["arn:aws:ssm", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "parameter/twitter_oauth/*"]]
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - Fn::Join: [ ":", ["arn:aws:dynamodb", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "table/twitter_oauth"]]

functions:
  auth:
    handler: handler.auth
    events:
      - { http: { path: auth, method: get } }
  callback:
    handler: handler.callback
    events:
      - { http: { path: callback, method: get } }
  me:
    handler: handler.me
    events:
      - { http: { path: me, method: get } }

resources:
  Resources:
    SessionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: twitter_oauth
        AttributeDefinitions:
          - { AttributeName: uid, AttributeType: S }
        KeySchema:
          - { AttributeName: uid, KeyType: HASH }
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification: 
          AttributeName: ttl
          Enabled: true

    WCUAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "twitter-oauth-dynamodb-wcu"
        AlarmDescription: "DynamoDB WCU alarm for twitter-oauth"
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - { Name: TableName, Value: { Ref: SessionTable } }
        EvaluationPeriods: 1
        MetricName: ConsumedWriteCapacityUnits
        Namespace: AWS/DynamoDB
        Period: 60
        Statistic: Maximum
        Threshold: 1
        TreatMissingData: notBreaching
        AlarmActions:
          - Fn::Join: [ ":", ["arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "aws-slack-notifier"]]
        OKActions:
          - Fn::Join: [ ":", ["arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "aws-slack-notifier"]]

    RCUAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "twitter-oauth-dynamodb-rcu"
        AlarmDescription: "DynamoDB RCU alarm for twitter-oauth"
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Dimensions:
          - { Name: TableName, Value: { Ref: SessionTable } }
        EvaluationPeriods: 1
        MetricName: ConsumedReadCapacityUnits
        Namespace: AWS/DynamoDB
        Period: 60
        Statistic: Maximum
        Threshold: 1
        TreatMissingData: notBreaching
        AlarmActions:
          - Fn::Join: [ ":", ["arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "aws-slack-notifier"]]
        OKActions:
          - Fn::Join: [ ":", ["arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "aws-slack-notifier"]]